# load required libraries
library(RITAN); library(RITANdata)
library(tidyverse)
library(ggplot2); library(ggtree)
library(cowplot)
# find files with differentially expressed proteins
filepath = file.path("..", "..", "Data", "Proteomics")
files = list.files(path = filepath,
pattern = 'dep')
url <- 'https://personal.broadinstitute.org/scalvo/MitoCarta_Download/MitoPathways3.0.gmx'
#mitopathways = rio::import(file = url)
mitopathways = read.delim(file = url)
geneset_list$MitoCarta = mitopathways
resources = c('MitoCarta')
terms = data.frame()
logfcthr = 0.5; pthr = 0.05
# run pathway analysis to initialize number of unique terms
for(i in 1:4){
# find list of DEPs
res = read.csv(file.path(filepath, (files[i]))); res = res[order(res$p_value),]
DEPs = res[(res$p_value < pthr & !is.na(res$p_value)),]
DEPs = DEPs[!is.na(DEPs$gene_symbol),]
rownames(DEPs) = make.unique(DEPs$gene_symbol)
# find DEPs with logfcthr cutoff
DEPs = rownames(DEPs[abs(DEPs$log2_foldchange) > logfcthr,])
e = term_enrichment(toupper(DEPs), resources = resources)
e = e[e$p < pthr,]
e$GeneRatio = e$n/e$n.set; e = e[order(e$GeneRatio, decreasing = T),]
terms = rbind(terms,head(e,10))
}
terms$name[duplicated(terms$name)]
# create dataframes to input values
GOs = unique(terms$name); nGOs = length(GOs); print(nGOs)
data = data.frame("GOs" = rep(GOs, 4),
"Condition" = rep(files, each = nGOs),
"GeneRatio" = '',
"pval" = '')
# rerun and input data into dataframe
for(i in 1:4){
# find list of DEPs
res = read.csv(file.path(filepath, (files[i]))); res = res[order(res$p_value),]
DEPs = res[(res$p_value < pthr & !is.na(res$p_value)),]
DEPs = DEPs[!is.na(DEPs$gene_symbol),]
rownames(DEPs) = make.unique(DEPs$gene_symbol)
# find enriched terms
DEPs = rownames(DEPs[abs(DEPs$log2_foldchange) > logfcthr,])
e = term_enrichment(toupper(DEPs), resources = resources)
e = e[e$p < pthr,]
e$GeneRatio = e$n/e$n.set; e = e[order(e$GeneRatio, decreasing = T),]
index = match(data$GOs[(1:nGOs)+nGOs*(i-1)],e$name)
data$GeneRatio[(1:nGOs)+nGOs*(i-1)] = e$n[index]/e$n.set[index]
data$pval[(1:nGOs)+nGOs*(i-1)] = as.numeric(e$p[index])
}
# clean up data
data$GeneRatio = as.numeric(data$GeneRatio)
data$pval = as.numeric(data$pval)
data$GeneRatio[data$GeneRatio == 0] = NA
data$GOs = gsub('MitoCarta.','',data$GOs)
data$GOs = gsub('_',' ',data$GOs)
# log transform p values
data$logp = -log10(data$pval)
# make data square to calculate euclidean distance
mat = data %>%
select(-GeneRatio, -pval) %>%
pivot_wider(names_from = Condition, values_from = logp) %>%
data.frame()
mat[is.na(mat)] = 0
row.names(mat) = mat$GOs
mat = mat[,-1]
clust = hclust(dist(mat %>% as.matrix()))
# create dendrogram
ddgram = as.dendrogram(clust)
ggtree_plot = ggtree(ddgram)
data$GOs = factor(data$GOs, levels = clust$labels[clust$order])
data$Condition = factor(data$Condition, levels = unique(data$Condition)[c(1,2,3,4)])
output_filepath = file.path("..", "Output", "Proteomics", "proteomics_pathways_both.pdf")
pdf(output_filepath, width = 3.47*2.3, height = 6.27*2)
dotplot = ggplot(data = data, aes(x=Condition, y = GOs, color = logp, size = GeneRatio)) +
geom_vline(aes(xintercept = Condition), color = "lightgray", alpha = 0.5) +
geom_hline(aes(yintercept = GOs), color = "lightgray", alpha = 0.5) +
geom_point() +
scale_color_viridis_c(name = '-log10(P)') +
cowplot::theme_cowplot() +
theme(axis.line  = element_blank()) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ylab('') +
theme(axis.ticks = element_blank()) +
scale_y_discrete(position = "right")
plot_grid(ggtree_plot, NULL, dotplot, nrow = 1, rel_widths = c(0.2,-0.05, 2), align = 'h')
dev.off()
# load required libraries
if (!require("RITAN", quietly = TRUE)) {BiocManager::install("RITAN")}
if (!require("RITANdata", quietly = TRUE)) {BiocManager::install("RITANdata")}
if (!require("tidyverse", quietly = TRUE)) {install.packages("tidyverse")}
if (!require("ggplot2", quietly = TRUE)) {install.packages("ggplot2")}
if (!require("ggtree", quietly = TRUE)) {BiocManager::install("ggtree")}
if (!require("cowplot", quietly = TRUE)) {install.packages("cowplot")}
# load required packages
if (!require("RITANdata", quietly = TRUE)) {BiocManager::install("RITANdata")}
if (!require("EnhancedVolcano", quietly = TRUE)) {BiocManager::install("EnhancedVolcano")}
library(RITANdata)
library(EnhancedVolcano)
# load mitocarta data
url <- 'https://personal.broadinstitute.org/scalvo/MitoCarta_Download/MitoPathways3.0.gmx'
mitopathways = read.delim(file = url)
geneset_list$MitoCarta = mitopathways
# find and read in files with differentially expressed proteins
filepath = file.path("..", "..", "Data", "Proteomics")
files = list.files(path = filepath,
pattern = 'dep')
logfcthr = 0.5; pthr = 0.05
# Create the contrast matrix for DE
for(i in 1:4){
dep = read.csv(file.path(filepath, (files[i])))
dep$log2_foldchange = dep$log2_foldchange*flip[i]
# set colors for each group
keyvals = ifelse((dep$log2_foldchange < -logfcthr & dep$p_value < pthr), 'blue',
ifelse((dep$log2_foldchange > logfcthr & dep$p_value < pthr), 'red',
'darkgrey')); keyvals[is.na(keyvals)] = 'darkgrey'
names(keyvals)[keyvals == 'red'] = con1
names(keyvals)[keyvals == 'darkgrey'] = 'unchanged'
names(keyvals)[keyvals == 'blue'] = con2
# subset genes that are up and downregulated
up_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange > logfcthr]); up_dep = up_dep[!is.na(up_dep)]
down_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange < -logfcthr]); down_dep = down_dep[!is.na(down_dep)]
both = c(up_dep,down_dep)
# filter those genes for mitochondrion involved genes according to GO terms
both_mito = geneset_list$MitoCarta
both_mito = both_mito[c('Detoxification','ROS_and_glutathione_metabolism',
'mt.tRNA_synthetases', 'Protein_import_and_sorting',
'Lipid_metabolism')]
both_mito = unique(unlist(both_mito)); both_mito = both_mito[both_mito != ""]
both_mito = both[toupper(both) %in% both_mito]
# make volcano plot
EnhancedVolcano(dep,
title = paste0(con2,'(-) vs ',con1,'(+)'), subtitle = '', subtitleLabSize = 0,
lab = dep$gene_symbol, selectLab = both_mito,
x = 'log2_foldchange', FCcutoff = 0.5, xlim = c(-3,3),
y = 'p_value', ylab = bquote(~-Log[10] ~ italic(P)), pCutoff = 5e-2, ylim = c(0,10),
pointSize = 1.5,
labSize = 7.0, labCol = 'black', labFace = 'bold', boxedLabels = T,
colAlpha = 0.8, colCustom = keyvals,
legendPosition = 'top', legendLabSize = 14, legendIconSize = 4.0,
drawConnectors = TRUE, widthConnectors = 0.5, typeConnectors = 'open',  colConnectors = 'black',
max.overlaps = 100, min.segment.length = 0.1, arrowheads = F,
cutoffLineCol = 'black',
axisLabSize = 27)
# save volcano plot
#ggsave(paste0(con1,"_vs_",con2,"_top5.svg"), units = 'in', width = 12.5, height = 10.5)
#ggsave(paste0(con1,"_vs_",con2,"_top5.png"), units = 'in', width = 12.5, height = 10.5)
filename = file.path("..", "Output", "Proteomics", paste0('protein_',con1,"_vs_",con2,".pdf"))
ggsave(filename, units = 'in', width = 12.5, height = 10.5)
}
# Create the contrast matrix for DE
for(i in 1:4){
dep = read.csv(file.path(filepath, (files[i])))
dep$log2_foldchange = dep$log2_foldchange
# set colors for each group
keyvals = ifelse((dep$log2_foldchange < -logfcthr & dep$p_value < pthr), 'blue',
ifelse((dep$log2_foldchange > logfcthr & dep$p_value < pthr), 'red',
'darkgrey')); keyvals[is.na(keyvals)] = 'darkgrey'
names(keyvals)[keyvals == 'red'] = con1
names(keyvals)[keyvals == 'darkgrey'] = 'unchanged'
names(keyvals)[keyvals == 'blue'] = con2
# subset genes that are up and downregulated
up_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange > logfcthr]); up_dep = up_dep[!is.na(up_dep)]
down_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange < -logfcthr]); down_dep = down_dep[!is.na(down_dep)]
both = c(up_dep,down_dep)
# filter those genes for mitochondrion involved genes according to GO terms
both_mito = geneset_list$MitoCarta
both_mito = both_mito[c('Detoxification','ROS_and_glutathione_metabolism',
'mt.tRNA_synthetases', 'Protein_import_and_sorting',
'Lipid_metabolism')]
both_mito = unique(unlist(both_mito)); both_mito = both_mito[both_mito != ""]
both_mito = both[toupper(both) %in% both_mito]
# make volcano plot
EnhancedVolcano(dep,
title = paste0(con2,'(-) vs ',con1,'(+)'), subtitle = '', subtitleLabSize = 0,
lab = dep$gene_symbol, selectLab = both_mito,
x = 'log2_foldchange', FCcutoff = 0.5, xlim = c(-3,3),
y = 'p_value', ylab = bquote(~-Log[10] ~ italic(P)), pCutoff = 5e-2, ylim = c(0,10),
pointSize = 1.5,
labSize = 7.0, labCol = 'black', labFace = 'bold', boxedLabels = T,
colAlpha = 0.8, colCustom = keyvals,
legendPosition = 'top', legendLabSize = 14, legendIconSize = 4.0,
drawConnectors = TRUE, widthConnectors = 0.5, typeConnectors = 'open',  colConnectors = 'black',
max.overlaps = 100, min.segment.length = 0.1, arrowheads = F,
cutoffLineCol = 'black',
axisLabSize = 27)
# save volcano plot
#ggsave(paste0(con1,"_vs_",con2,"_top5.svg"), units = 'in', width = 12.5, height = 10.5)
#ggsave(paste0(con1,"_vs_",con2,"_top5.png"), units = 'in', width = 12.5, height = 10.5)
filename = file.path("..", "Output", "Proteomics", paste0('protein_',con1,"_vs_",con2,".pdf"))
ggsave(filename, units = 'in', width = 12.5, height = 10.5)
}
View(dep)
# load required packages
if (!require("RITANdata", quietly = TRUE)) {BiocManager::install("RITANdata")}
if (!require("EnhancedVolcano", quietly = TRUE)) {BiocManager::install("EnhancedVolcano")}
library(RITANdata)
library(EnhancedVolcano)
# load mitocarta data
url <- 'https://personal.broadinstitute.org/scalvo/MitoCarta_Download/MitoPathways3.0.gmx'
mitopathways = read.delim(file = url)
geneset_list$MitoCarta = mitopathways
# find and read in files with differentially expressed proteins
filepath = file.path("..", "..", "Data", "Proteomics")
files = list.files(path = filepath,
pattern = 'dep')
logfcthr = 0.5; pthr = 0.05
library("stringr")
files[1]
str_split(files[1], "_")
for(i in 1:4){
dep = read.csv(file.path(filepath, (files[i])))
con1 = str_split(files[i], "_")[2]
con2 = str_split(files[i], "_")[4]
# set colors for each group
keyvals = ifelse((dep$log2_foldchange < -logfcthr & dep$p_value < pthr), 'blue',
ifelse((dep$log2_foldchange > logfcthr & dep$p_value < pthr), 'red',
'darkgrey')); keyvals[is.na(keyvals)] = 'darkgrey'
names(keyvals)[keyvals == 'red'] = con1
names(keyvals)[keyvals == 'darkgrey'] = 'unchanged'
names(keyvals)[keyvals == 'blue'] = con2
# subset genes that are up and downregulated
up_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange > logfcthr]); up_dep = up_dep[!is.na(up_dep)]
down_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange < -logfcthr]); down_dep = down_dep[!is.na(down_dep)]
both = c(up_dep,down_dep)
# filter those genes for mitochondrion involved genes according to GO terms
both_mito = geneset_list$MitoCarta
both_mito = both_mito[c('Detoxification','ROS_and_glutathione_metabolism',
'mt.tRNA_synthetases', 'Protein_import_and_sorting',
'Lipid_metabolism')]
both_mito = unique(unlist(both_mito)); both_mito = both_mito[both_mito != ""]
both_mito = both[toupper(both) %in% both_mito]
# make volcano plot
EnhancedVolcano(dep,
title = paste0(con2,'(-) vs ',con1,'(+)'), subtitle = '', subtitleLabSize = 0,
lab = dep$gene_symbol, selectLab = both_mito,
x = 'log2_foldchange', FCcutoff = 0.5, xlim = c(-3,3),
y = 'p_value', ylab = bquote(~-Log[10] ~ italic(P)), pCutoff = 5e-2, ylim = c(0,10),
pointSize = 1.5,
labSize = 7.0, labCol = 'black', labFace = 'bold', boxedLabels = T,
colAlpha = 0.8, colCustom = keyvals,
legendPosition = 'top', legendLabSize = 14, legendIconSize = 4.0,
drawConnectors = TRUE, widthConnectors = 0.5, typeConnectors = 'open',  colConnectors = 'black',
max.overlaps = 100, min.segment.length = 0.1, arrowheads = F,
cutoffLineCol = 'black',
axisLabSize = 27)
# save volcano plot
#ggsave(paste0(con1,"_vs_",con2,"_top5.svg"), units = 'in', width = 12.5, height = 10.5)
#ggsave(paste0(con1,"_vs_",con2,"_top5.png"), units = 'in', width = 12.5, height = 10.5)
filename = file.path("..", "Output", "Proteomics", paste0('protein_',con1,"_vs_",con2,".pdf"))
ggsave(filename, units = 'in', width = 12.5, height = 10.5)
}
str_split(files[i], "_")
str_split(files[i], "_")[2]
unlist(str_split(files[i], "_"))[2]
for(i in 1:4){
dep = read.csv(file.path(filepath, (files[i])))
con1 = unlist(str_split(files[i], "_"))[2]
con2 = unlist(str_split(files[i], "_"))[4]
# set colors for each group
keyvals = ifelse((dep$log2_foldchange < -logfcthr & dep$p_value < pthr), 'blue',
ifelse((dep$log2_foldchange > logfcthr & dep$p_value < pthr), 'red',
'darkgrey')); keyvals[is.na(keyvals)] = 'darkgrey'
names(keyvals)[keyvals == 'red'] = con1
names(keyvals)[keyvals == 'darkgrey'] = 'unchanged'
names(keyvals)[keyvals == 'blue'] = con2
# subset genes that are up and downregulated
up_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange > logfcthr]); up_dep = up_dep[!is.na(up_dep)]
down_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange < -logfcthr]); down_dep = down_dep[!is.na(down_dep)]
both = c(up_dep,down_dep)
# filter those genes for mitochondrion involved genes according to GO terms
both_mito = geneset_list$MitoCarta
both_mito = both_mito[c('Detoxification','ROS_and_glutathione_metabolism',
'mt.tRNA_synthetases', 'Protein_import_and_sorting',
'Lipid_metabolism')]
both_mito = unique(unlist(both_mito)); both_mito = both_mito[both_mito != ""]
both_mito = both[toupper(both) %in% both_mito]
# make volcano plot
EnhancedVolcano(dep,
title = paste0(con2,'(-) vs ',con1,'(+)'), subtitle = '', subtitleLabSize = 0,
lab = dep$gene_symbol, selectLab = both_mito,
x = 'log2_foldchange', FCcutoff = 0.5, xlim = c(-3,3),
y = 'p_value', ylab = bquote(~-Log[10] ~ italic(P)), pCutoff = 5e-2, ylim = c(0,10),
pointSize = 1.5,
labSize = 7.0, labCol = 'black', labFace = 'bold', boxedLabels = T,
colAlpha = 0.8, colCustom = keyvals,
legendPosition = 'top', legendLabSize = 14, legendIconSize = 4.0,
drawConnectors = TRUE, widthConnectors = 0.5, typeConnectors = 'open',  colConnectors = 'black',
max.overlaps = 100, min.segment.length = 0.1, arrowheads = F,
cutoffLineCol = 'black',
axisLabSize = 27)
# save volcano plot
#ggsave(paste0(con1,"_vs_",con2,"_top5.svg"), units = 'in', width = 12.5, height = 10.5)
#ggsave(paste0(con1,"_vs_",con2,"_top5.png"), units = 'in', width = 12.5, height = 10.5)
filename = file.path("..", "Output", "Proteomics", paste0('protein_',con1,"_vs_",con2,".pdf"))
ggsave(filename, units = 'in', width = 12.5, height = 10.5)
}
for(i in 1:4){
dep = read.csv(file.path(filepath, (files[i])))
con1 = unlist(str_split(files[i], "_|."))[2]
con2 = unlist(str_split(files[i], "_|."))[4]
# set colors for each group
keyvals = ifelse((dep$log2_foldchange < -logfcthr & dep$p_value < pthr), 'blue',
ifelse((dep$log2_foldchange > logfcthr & dep$p_value < pthr), 'red',
'darkgrey')); keyvals[is.na(keyvals)] = 'darkgrey'
names(keyvals)[keyvals == 'red'] = con1
names(keyvals)[keyvals == 'darkgrey'] = 'unchanged'
names(keyvals)[keyvals == 'blue'] = con2
# subset genes that are up and downregulated
up_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange > logfcthr]); up_dep = up_dep[!is.na(up_dep)]
down_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange < -logfcthr]); down_dep = down_dep[!is.na(down_dep)]
both = c(up_dep,down_dep)
# filter those genes for mitochondrion involved genes according to GO terms
both_mito = geneset_list$MitoCarta
both_mito = both_mito[c('Detoxification','ROS_and_glutathione_metabolism',
'mt.tRNA_synthetases', 'Protein_import_and_sorting',
'Lipid_metabolism')]
both_mito = unique(unlist(both_mito)); both_mito = both_mito[both_mito != ""]
both_mito = both[toupper(both) %in% both_mito]
# make volcano plot
EnhancedVolcano(dep,
title = paste0(con2,'(-) vs ',con1,'(+)'), subtitle = '', subtitleLabSize = 0,
lab = dep$gene_symbol, selectLab = both_mito,
x = 'log2_foldchange', FCcutoff = 0.5, xlim = c(-3,3),
y = 'p_value', ylab = bquote(~-Log[10] ~ italic(P)), pCutoff = 5e-2, ylim = c(0,10),
pointSize = 1.5,
labSize = 7.0, labCol = 'black', labFace = 'bold', boxedLabels = T,
colAlpha = 0.8, colCustom = keyvals,
legendPosition = 'top', legendLabSize = 14, legendIconSize = 4.0,
drawConnectors = TRUE, widthConnectors = 0.5, typeConnectors = 'open',  colConnectors = 'black',
max.overlaps = 100, min.segment.length = 0.1, arrowheads = F,
cutoffLineCol = 'black',
axisLabSize = 27)
# save volcano plot
#ggsave(paste0(con1,"_vs_",con2,"_top5.svg"), units = 'in', width = 12.5, height = 10.5)
#ggsave(paste0(con1,"_vs_",con2,"_top5.png"), units = 'in', width = 12.5, height = 10.5)
filename = file.path("..", "Output", "Proteomics", paste0('protein_',con1,"_vs_",con2,".pdf"))
ggsave(filename, units = 'in', width = 12.5, height = 10.5)
}
for(i in 1:4){
dep = read.csv(file.path(filepath, (files[i])))
con1 = unlist(strsplit(files[i], '_.'))[2]
con2 = unlist(strsplit(files[i], '_.'))[4]
# set colors for each group
keyvals = ifelse((dep$log2_foldchange < -logfcthr & dep$p_value < pthr), 'blue',
ifelse((dep$log2_foldchange > logfcthr & dep$p_value < pthr), 'red',
'darkgrey')); keyvals[is.na(keyvals)] = 'darkgrey'
names(keyvals)[keyvals == 'red'] = con1
names(keyvals)[keyvals == 'darkgrey'] = 'unchanged'
names(keyvals)[keyvals == 'blue'] = con2
# subset genes that are up and downregulated
up_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange > logfcthr]); up_dep = up_dep[!is.na(up_dep)]
down_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange < -logfcthr]); down_dep = down_dep[!is.na(down_dep)]
both = c(up_dep,down_dep)
# filter those genes for mitochondrion involved genes according to GO terms
both_mito = geneset_list$MitoCarta
both_mito = both_mito[c('Detoxification','ROS_and_glutathione_metabolism',
'mt.tRNA_synthetases', 'Protein_import_and_sorting',
'Lipid_metabolism')]
both_mito = unique(unlist(both_mito)); both_mito = both_mito[both_mito != ""]
both_mito = both[toupper(both) %in% both_mito]
# make volcano plot
EnhancedVolcano(dep,
title = paste0(con2,'(-) vs ',con1,'(+)'), subtitle = '', subtitleLabSize = 0,
lab = dep$gene_symbol, selectLab = both_mito,
x = 'log2_foldchange', FCcutoff = 0.5, xlim = c(-3,3),
y = 'p_value', ylab = bquote(~-Log[10] ~ italic(P)), pCutoff = 5e-2, ylim = c(0,10),
pointSize = 1.5,
labSize = 7.0, labCol = 'black', labFace = 'bold', boxedLabels = T,
colAlpha = 0.8, colCustom = keyvals,
legendPosition = 'top', legendLabSize = 14, legendIconSize = 4.0,
drawConnectors = TRUE, widthConnectors = 0.5, typeConnectors = 'open',  colConnectors = 'black',
max.overlaps = 100, min.segment.length = 0.1, arrowheads = F,
cutoffLineCol = 'black',
axisLabSize = 27)
# save volcano plot
#ggsave(paste0(con1,"_vs_",con2,"_top5.svg"), units = 'in', width = 12.5, height = 10.5)
#ggsave(paste0(con1,"_vs_",con2,"_top5.png"), units = 'in', width = 12.5, height = 10.5)
filename = file.path("..", "Output", "Proteomics", paste0('protein_',con1,"_vs_",con2,".pdf"))
ggsave(filename, units = 'in', width = 12.5, height = 10.5)
}
for(i in 1:4){
dep = read.csv(file.path(filepath, (files[i])))
con1 = unlist(strsplit(files[i], '_'))[2]
con2 = unlist(strsplit(files[i], '_'))[4]
# set colors for each group
keyvals = ifelse((dep$log2_foldchange < -logfcthr & dep$p_value < pthr), 'blue',
ifelse((dep$log2_foldchange > logfcthr & dep$p_value < pthr), 'red',
'darkgrey')); keyvals[is.na(keyvals)] = 'darkgrey'
names(keyvals)[keyvals == 'red'] = con1
names(keyvals)[keyvals == 'darkgrey'] = 'unchanged'
names(keyvals)[keyvals == 'blue'] = con2
# subset genes that are up and downregulated
up_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange > logfcthr]); up_dep = up_dep[!is.na(up_dep)]
down_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange < -logfcthr]); down_dep = down_dep[!is.na(down_dep)]
both = c(up_dep,down_dep)
# filter those genes for mitochondrion involved genes according to GO terms
both_mito = geneset_list$MitoCarta
both_mito = both_mito[c('Detoxification','ROS_and_glutathione_metabolism',
'mt.tRNA_synthetases', 'Protein_import_and_sorting',
'Lipid_metabolism')]
both_mito = unique(unlist(both_mito)); both_mito = both_mito[both_mito != ""]
both_mito = both[toupper(both) %in% both_mito]
# make volcano plot
EnhancedVolcano(dep,
title = paste0(con2,'(-) vs ',con1,'(+)'), subtitle = '', subtitleLabSize = 0,
lab = dep$gene_symbol, selectLab = both_mito,
x = 'log2_foldchange', FCcutoff = 0.5, xlim = c(-3,3),
y = 'p_value', ylab = bquote(~-Log[10] ~ italic(P)), pCutoff = 5e-2, ylim = c(0,10),
pointSize = 1.5,
labSize = 7.0, labCol = 'black', labFace = 'bold', boxedLabels = T,
colAlpha = 0.8, colCustom = keyvals,
legendPosition = 'top', legendLabSize = 14, legendIconSize = 4.0,
drawConnectors = TRUE, widthConnectors = 0.5, typeConnectors = 'open',  colConnectors = 'black',
max.overlaps = 100, min.segment.length = 0.1, arrowheads = F,
cutoffLineCol = 'black',
axisLabSize = 27)
# save volcano plot
#ggsave(paste0(con1,"_vs_",con2,"_top5.svg"), units = 'in', width = 12.5, height = 10.5)
#ggsave(paste0(con1,"_vs_",con2,"_top5.png"), units = 'in', width = 12.5, height = 10.5)
filename = file.path("..", "Output", "Proteomics", paste0('protein_',con1,"_vs_",con2,".pdf"))
ggsave(filename, units = 'in', width = 12.5, height = 10.5)
}
for(i in 1:4){
dep = read.csv(file.path(filepath, (files[i])))
con1 = unlist(strsplit(files[i], '[_,]+'))[2]
con2 = unlist(strsplit(files[i], '[_,]+'))[4]
# set colors for each group
keyvals = ifelse((dep$log2_foldchange < -logfcthr & dep$p_value < pthr), 'blue',
ifelse((dep$log2_foldchange > logfcthr & dep$p_value < pthr), 'red',
'darkgrey')); keyvals[is.na(keyvals)] = 'darkgrey'
names(keyvals)[keyvals == 'red'] = con1
names(keyvals)[keyvals == 'darkgrey'] = 'unchanged'
names(keyvals)[keyvals == 'blue'] = con2
# subset genes that are up and downregulated
up_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange > logfcthr]); up_dep = up_dep[!is.na(up_dep)]
down_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange < -logfcthr]); down_dep = down_dep[!is.na(down_dep)]
both = c(up_dep,down_dep)
# filter those genes for mitochondrion involved genes according to GO terms
both_mito = geneset_list$MitoCarta
both_mito = both_mito[c('Detoxification','ROS_and_glutathione_metabolism',
'mt.tRNA_synthetases', 'Protein_import_and_sorting',
'Lipid_metabolism')]
both_mito = unique(unlist(both_mito)); both_mito = both_mito[both_mito != ""]
both_mito = both[toupper(both) %in% both_mito]
# make volcano plot
EnhancedVolcano(dep,
title = paste0(con2,'(-) vs ',con1,'(+)'), subtitle = '', subtitleLabSize = 0,
lab = dep$gene_symbol, selectLab = both_mito,
x = 'log2_foldchange', FCcutoff = 0.5, xlim = c(-3,3),
y = 'p_value', ylab = bquote(~-Log[10] ~ italic(P)), pCutoff = 5e-2, ylim = c(0,10),
pointSize = 1.5,
labSize = 7.0, labCol = 'black', labFace = 'bold', boxedLabels = T,
colAlpha = 0.8, colCustom = keyvals,
legendPosition = 'top', legendLabSize = 14, legendIconSize = 4.0,
drawConnectors = TRUE, widthConnectors = 0.5, typeConnectors = 'open',  colConnectors = 'black',
max.overlaps = 100, min.segment.length = 0.1, arrowheads = F,
cutoffLineCol = 'black',
axisLabSize = 27)
# save volcano plot
filename = file.path("..", "Output", "Proteomics", paste0('protein_',con1,"_vs_",con2,".pdf"))
ggsave(filename, units = 'in', width = 12.5, height = 10.5)
}
for(i in 1:4){
dep = read.csv(file.path(filepath, (files[i])))
con1 = unlist(strsplit(files[i], '[_.]+'))[2]
con2 = unlist(strsplit(files[i], '[_.]+'))[4]
# set colors for each group
keyvals = ifelse((dep$log2_foldchange < -logfcthr & dep$p_value < pthr), 'blue',
ifelse((dep$log2_foldchange > logfcthr & dep$p_value < pthr), 'red',
'darkgrey')); keyvals[is.na(keyvals)] = 'darkgrey'
names(keyvals)[keyvals == 'red'] = con1
names(keyvals)[keyvals == 'darkgrey'] = 'unchanged'
names(keyvals)[keyvals == 'blue'] = con2
# subset genes that are up and downregulated
up_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange > logfcthr]); up_dep = up_dep[!is.na(up_dep)]
down_dep = c(dep$gene_symbol[dep$p_value < pthr & dep$log2_foldchange < -logfcthr]); down_dep = down_dep[!is.na(down_dep)]
both = c(up_dep,down_dep)
# filter those genes for mitochondrion involved genes according to GO terms
both_mito = geneset_list$MitoCarta
both_mito = both_mito[c('Detoxification','ROS_and_glutathione_metabolism',
'mt.tRNA_synthetases', 'Protein_import_and_sorting',
'Lipid_metabolism')]
both_mito = unique(unlist(both_mito)); both_mito = both_mito[both_mito != ""]
both_mito = both[toupper(both) %in% both_mito]
# make volcano plot
EnhancedVolcano(dep,
title = paste0(con2,'(-) vs ',con1,'(+)'), subtitle = '', subtitleLabSize = 0,
lab = dep$gene_symbol, selectLab = both_mito,
x = 'log2_foldchange', FCcutoff = 0.5, xlim = c(-3,3),
y = 'p_value', ylab = bquote(~-Log[10] ~ italic(P)), pCutoff = 5e-2, ylim = c(0,10),
pointSize = 1.5,
labSize = 7.0, labCol = 'black', labFace = 'bold', boxedLabels = T,
colAlpha = 0.8, colCustom = keyvals,
legendPosition = 'top', legendLabSize = 14, legendIconSize = 4.0,
drawConnectors = TRUE, widthConnectors = 0.5, typeConnectors = 'open',  colConnectors = 'black',
max.overlaps = 100, min.segment.length = 0.1, arrowheads = F,
cutoffLineCol = 'black',
axisLabSize = 27)
# save volcano plot
filename = file.path("..", "Output", "Proteomics", paste0('protein_',con1,"_vs_",con2,".pdf"))
ggsave(filename, units = 'in', width = 12.5, height = 10.5)
}
